<?php

namespace App\Tests\Controller;

use App\Entity\User;
use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;

class RegistrationTest extends WebTestCase
{
    private $client;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->client = static::createClient();
    }

    public function testEmptyEmailegistration(): void
    {
        $data = [
            'email' => '',
        ];
        $this->client->jsonRequest('POST', 'api/auth/sendemail', $data);
        $response = $this->client->getResponse();

        $this->assertSame(400, $response->getStatusCode());
        $responseData = json_decode($response->getContent());
        $this->assertSame(false, $responseData->success);
    }

    /**
     * @dataProvider userDataProvider
     */
    public function testEmailRegistration(array $data, int $expectedCode): void
    {
        $this->client->jsonRequest('POST', 'api/auth/sendemail', $data);
        $response = $this->client->getResponse();

        $this->assertSame($expectedCode, $response->getStatusCode());
        $responseData = json_decode($response->getContent());
        $this->assertSame(true, $responseData->success);
    }

    public function testRegisterAndFindEmail(): void
    {
        $dataReg = [
                'email' => 'magnet@and.com',
        ];

        $this->client->jsonRequest('POST', 'api/auth/sendemail', $dataReg);

        $response = $this->client->getResponse();

        $this->assertSame(201, $response->getStatusCode());
        $responseData = json_decode($response->getContent());
        $this->assertSame($responseData->success, true);

        $entityManager = $this->client->getContainer()->get('doctrine')->getManager();
        $user = $entityManager->getRepository(User::class)->findOneBy(['email' => 'magnet@and.com']);
        $this->assertNotNull($user);
    }

    /**
     * @dataProvider mailDataProvider
     */
    public function testUsedEmailRegistration1(array $dataNewRegistration, int $expectedCode): void
    {
        $this->client->jsonRequest('POST', 'api/auth/sendemail', $dataNewRegistration);
        $response = $this->client->getResponse();

        $this->assertSame($expectedCode, $response->getStatusCode());
        $responseData = json_decode($response->getContent());
        $this->assertSame(false, $responseData->success);
    }

    public function userDataProvider()
    {
        return [
            [
                [
                    'email' => 'andersenlab@aa.com',
                ],
                201,
            ],
            [
                [
                    'email' => 'magnet@and.com',
                ],
                201,
            ],
            [
                [
                    'email' => 'andersen@aa.com',
                ],
                201,
            ],
        ];
    }

    public function mailDataProvider()
    {
        return [
            [
            [
                'email' => 'alex1@aa.com',
            ],
                400,
            ],
        ];
    }
}
