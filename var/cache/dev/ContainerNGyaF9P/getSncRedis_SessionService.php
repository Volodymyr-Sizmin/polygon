<?php

namespace ContainerNGyaF9P;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSncRedis_SessionService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'snc_redis.session' shared service.
     *
     * @return \Predis\Client
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/predis/predis/src/ClientInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/predis/predis/src/Client.php';
        include_once \dirname(__DIR__, 4).'/vendor/predis/predis/src/Connection/ParametersInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/predis/predis/src/Connection/Parameters.php';
        include_once \dirname(__DIR__, 4).'/vendor/snc/redis-bundle/src/Factory/PredisParametersFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/predis/predis/src/Configuration/OptionsInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/predis/predis/src/Configuration/Options.php';
        include_once \dirname(__DIR__, 4).'/vendor/predis/predis/src/Profile/ProfileInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/predis/predis/src/Profile/RedisProfile.php';
        include_once \dirname(__DIR__, 4).'/vendor/predis/predis/src/Profile/RedisVersion320.php';
        include_once \dirname(__DIR__, 4).'/vendor/predis/predis/src/Connection/FactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/predis/predis/src/Connection/Factory.php';
        include_once \dirname(__DIR__, 4).'/vendor/snc/redis-bundle/src/Client/Predis/Connection/ConnectionFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/snc/redis-bundle/src/Logger/RedisLogger.php';

        $a = new \Predis\Profile\RedisVersion320();
        $b = new \Snc\RedisBundle\Client\Predis\Connection\ConnectionFactory($a);
        $b->setStopwatch(($container->privates['debug.stopwatch'] ?? ($container->privates['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true))));
        $b->setConnectionWrapperClass('Snc\\RedisBundle\\Client\\Predis\\Connection\\ConnectionWrapper');
        $b->setLogger(new \Snc\RedisBundle\Logger\RedisLogger(($container->privates['logger'] ?? ($container->privates['logger'] = new \Symfony\Component\HttpKernel\Log\Logger()))));

        return $container->privates['snc_redis.session'] = new \Predis\Client(\Snc\RedisBundle\Factory\PredisParametersFactory::create(['read_write_timeout' => NULL, 'iterable_multibulk' => false, 'serialization' => 'default', 'profile' => 'default', 'prefix' => NULL, 'service' => NULL, 'async_connect' => false, 'timeout' => 5, 'persistent' => false, 'exceptions' => true, 'ssl' => [], 'logging' => true, 'alias' => 'session'], 'Predis\\Connection\\Parameters', 'redis://eu4HbLV#n62il&i9@10.10.14.22:6379'), new \Predis\Configuration\Options(['read_write_timeout' => NULL, 'iterable_multibulk' => false, 'serialization' => 'default', 'profile' => $a, 'prefix' => NULL, 'service' => NULL, 'async_connect' => false, 'timeout' => 5, 'persistent' => false, 'exceptions' => true, 'ssl' => [], 'connections' => $b]));
    }
}
