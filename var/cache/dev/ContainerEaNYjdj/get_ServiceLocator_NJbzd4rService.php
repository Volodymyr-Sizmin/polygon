<?php

namespace ContainerEaNYjdj;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_NJbzd4rService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.NJbzd4r' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.NJbzd4r'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\CreatePinController::confPin' => ['privates', '.service_locator.EhNGjzf', 'get_ServiceLocator_EhNGjzfService', true],
            'App\\Controller\\CreatePinController::createPin' => ['privates', '.service_locator.EhNGjzf', 'get_ServiceLocator_EhNGjzfService', true],
            'App\\Controller\\LoginByIdController::idLogin' => ['privates', '.service_locator.mIQa0gx', 'get_ServiceLocator_MIQa0gxService', true],
            'App\\Controller\\LoginController::emailLogin' => ['privates', '.service_locator.SRxqn0Y', 'get_ServiceLocator_SRxqn0YService', true],
            'App\\Controller\\MatchCodesController::matchCodes' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\NonClientRegisterController::nonClientRegister' => ['privates', '.service_locator.O7Avvig', 'get_ServiceLocator_O7AvvigService', true],
            'App\\Controller\\OwnQuestionController::yourQuestion' => ['privates', '.service_locator.O7Avvig', 'get_ServiceLocator_O7AvvigService', true],
            'App\\Controller\\PasswordController::passwordMatch' => ['privates', '.service_locator.FP.pbDe', 'get_ServiceLocator_FP_PbDeService', true],
            'App\\Controller\\ResetCodeController::matchResetCodes' => ['privates', '.service_locator.EhNGjzf', 'get_ServiceLocator_EhNGjzfService', true],
            'App\\Controller\\ResetController::resetById' => ['privates', '.service_locator.EhNGjzf', 'get_ServiceLocator_EhNGjzfService', true],
            'App\\Controller\\ResetPasswordController::passwordMatch' => ['privates', '.service_locator.wkLA6hh', 'get_ServiceLocator_WkLA6hhService', true],
            'App\\Controller\\ResetPinController::finalSavePin' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\ResetPinController::matchPin' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\ResetPinController::receivePin' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\ResetPinController::recieveId' => ['privates', '.service_locator.EhNGjzf', 'get_ServiceLocator_EhNGjzfService', true],
            'App\\Controller\\SaveNonBankClientDataController::savedata' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\SaveRegisterDataController::savedata' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\SendEmailController::sendEmail' => ['privates', '.service_locator.EhNGjzf', 'get_ServiceLocator_EhNGjzfService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'App\\Kernel::terminate' => ['privates', '.service_locator.KfwZsne', 'get_ServiceLocator_KfwZsneService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'kernel::terminate' => ['privates', '.service_locator.KfwZsne', 'get_ServiceLocator_KfwZsneService', true],
            'App\\Controller\\CreatePinController:confPin' => ['privates', '.service_locator.EhNGjzf', 'get_ServiceLocator_EhNGjzfService', true],
            'App\\Controller\\CreatePinController:createPin' => ['privates', '.service_locator.EhNGjzf', 'get_ServiceLocator_EhNGjzfService', true],
            'App\\Controller\\LoginByIdController:idLogin' => ['privates', '.service_locator.mIQa0gx', 'get_ServiceLocator_MIQa0gxService', true],
            'App\\Controller\\LoginController:emailLogin' => ['privates', '.service_locator.SRxqn0Y', 'get_ServiceLocator_SRxqn0YService', true],
            'App\\Controller\\MatchCodesController:matchCodes' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\NonClientRegisterController:nonClientRegister' => ['privates', '.service_locator.O7Avvig', 'get_ServiceLocator_O7AvvigService', true],
            'App\\Controller\\OwnQuestionController:yourQuestion' => ['privates', '.service_locator.O7Avvig', 'get_ServiceLocator_O7AvvigService', true],
            'App\\Controller\\PasswordController:passwordMatch' => ['privates', '.service_locator.FP.pbDe', 'get_ServiceLocator_FP_PbDeService', true],
            'App\\Controller\\ResetCodeController:matchResetCodes' => ['privates', '.service_locator.EhNGjzf', 'get_ServiceLocator_EhNGjzfService', true],
            'App\\Controller\\ResetController:resetById' => ['privates', '.service_locator.EhNGjzf', 'get_ServiceLocator_EhNGjzfService', true],
            'App\\Controller\\ResetPasswordController:passwordMatch' => ['privates', '.service_locator.wkLA6hh', 'get_ServiceLocator_WkLA6hhService', true],
            'App\\Controller\\ResetPinController:finalSavePin' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\ResetPinController:matchPin' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\ResetPinController:receivePin' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\ResetPinController:recieveId' => ['privates', '.service_locator.EhNGjzf', 'get_ServiceLocator_EhNGjzfService', true],
            'App\\Controller\\SaveNonBankClientDataController:savedata' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\SaveRegisterDataController:savedata' => ['privates', '.service_locator.T7xmfzk', 'get_ServiceLocator_T7xmfzkService', true],
            'App\\Controller\\SendEmailController:sendEmail' => ['privates', '.service_locator.EhNGjzf', 'get_ServiceLocator_EhNGjzfService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'kernel:terminate' => ['privates', '.service_locator.KfwZsne', 'get_ServiceLocator_KfwZsneService', true],
        ], [
            'App\\Controller\\CreatePinController::confPin' => '?',
            'App\\Controller\\CreatePinController::createPin' => '?',
            'App\\Controller\\LoginByIdController::idLogin' => '?',
            'App\\Controller\\LoginController::emailLogin' => '?',
            'App\\Controller\\MatchCodesController::matchCodes' => '?',
            'App\\Controller\\NonClientRegisterController::nonClientRegister' => '?',
            'App\\Controller\\OwnQuestionController::yourQuestion' => '?',
            'App\\Controller\\PasswordController::passwordMatch' => '?',
            'App\\Controller\\ResetCodeController::matchResetCodes' => '?',
            'App\\Controller\\ResetController::resetById' => '?',
            'App\\Controller\\ResetPasswordController::passwordMatch' => '?',
            'App\\Controller\\ResetPinController::finalSavePin' => '?',
            'App\\Controller\\ResetPinController::matchPin' => '?',
            'App\\Controller\\ResetPinController::receivePin' => '?',
            'App\\Controller\\ResetPinController::recieveId' => '?',
            'App\\Controller\\SaveNonBankClientDataController::savedata' => '?',
            'App\\Controller\\SaveRegisterDataController::savedata' => '?',
            'App\\Controller\\SendEmailController::sendEmail' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'App\\Kernel::terminate' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'kernel::terminate' => '?',
            'App\\Controller\\CreatePinController:confPin' => '?',
            'App\\Controller\\CreatePinController:createPin' => '?',
            'App\\Controller\\LoginByIdController:idLogin' => '?',
            'App\\Controller\\LoginController:emailLogin' => '?',
            'App\\Controller\\MatchCodesController:matchCodes' => '?',
            'App\\Controller\\NonClientRegisterController:nonClientRegister' => '?',
            'App\\Controller\\OwnQuestionController:yourQuestion' => '?',
            'App\\Controller\\PasswordController:passwordMatch' => '?',
            'App\\Controller\\ResetCodeController:matchResetCodes' => '?',
            'App\\Controller\\ResetController:resetById' => '?',
            'App\\Controller\\ResetPasswordController:passwordMatch' => '?',
            'App\\Controller\\ResetPinController:finalSavePin' => '?',
            'App\\Controller\\ResetPinController:matchPin' => '?',
            'App\\Controller\\ResetPinController:receivePin' => '?',
            'App\\Controller\\ResetPinController:recieveId' => '?',
            'App\\Controller\\SaveNonBankClientDataController:savedata' => '?',
            'App\\Controller\\SaveRegisterDataController:savedata' => '?',
            'App\\Controller\\SendEmailController:sendEmail' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
            'kernel:terminate' => '?',
        ]);
    }
}
